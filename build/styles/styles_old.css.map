{"version":3,"sources":["../../node_modules/nib/lib/nib/normalize/html5.styl","../../node_modules/nib/lib/nib/flex.styl","styles_old.css","../../node_modules/typographic/stylus/typographic.styl","../../node_modules/nib/lib/nib/vendor.styl","styles_old.styl","../../node_modules/rupture/rupture/index.styl"],"names":[],"mappings":"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","file":"styles_old.css","sourcesContent":["// Based in Nicolas Gallagher's git.io/normalize\nnormalize-html5()\n  // `block` display for HTML5 elements in IE 8~11 and FF.\n  article, details, section, summary,\n  aside, main, menu, nav, figcaption,\n  figure, footer, header, hgroup\n    display block\n\n  audio, canvas, progress, video\n    display inline-block // Set `inline-block` not defined in IE 8~9.\n    vertical-align  baseline // Fix v-align of `progress` in Chrome, FF, and O.\n\n  audio:not([controls])\n      display none // Prevent displaying `audio` without controls.\n      height  0 // Remove excess height in iOS 5 devices.\n\n  [hidden], // Address `[hidden]` styling not present in IE 8~10.\n  template  // Hide the `template` element in IE 8~11, Safari, and FF < 22.\n    display none\n","/*\n * Vendor \"display: flex\" support with fallback to obsolete versions.\n */\n\nflex-version ?= box flex\n\n//\n// 1. Display values\n//    - http://www.w3.org/TR/css3-flexbox/#flex-containers\n//\ndisplay(type, args...)\n  if flex == type || inline-flex == type\n    if box in flex-version\n      if flex == type\n        display: -ms-flexbox args\n        display: vendor-value(box args, only: moz webkit)\n      else\n        display: -ms-inline-flexbox args\n        display: vendor-value(inline-box args, only: moz webkit)\n    if flex in flex-version\n      display: vendor-value(arguments, only: webkit official) // overwrites old webkit\n  else\n    display: arguments\n\n/*\n * New syntax for browsers like Google Chrome.\n * Plus a translation to the old syntax, if possible.\n */\n\n\n//\n// 5. Ordering and Orientation\n//    - http://www.w3.org/TR/css3-flexbox/#ordering-and-orientation\n//\n-flex-obsolete-direction(direction)\n  if box in flex-version\n    if row-reverse == direction || column-reverse == direction\n      vendor('box-direction', reverse, ignore: ms official)\n\n    if row == direction || row-reverse == direction\n      vendor('box-orient', horizontal, ignore: ms official)\n    else if column == direction || column-reverse == direction\n      vendor('box-orient', vertical, ignore: ms official)\n\n-flex-obsolete-wrap(value)\n  if box in flex-version\n    // WARN: wrap-reverse does not have a box equivalent. This will render in different manners\n    //    on box vs. flex values.\n    if 'wrap' == value || wrap-reverse == value\n      vendor('box-lines', multiple, ignore: ms official)\n    else if nowrap == value\n      vendor('box-lines', single, ignore: ms official)\n\nflex-direction(direction)\n  // obsolete\n  -flex-obsolete-direction(direction)\n\n  // new\n  if flex in flex-version\n    vendor('flex-direction', arguments, only: webkit ms official)\n\nflex-wrap(value)\n  // obsolete\n  -flex-obsolete-wrap(value)\n\n  if flex in flex-version\n    vendor('flex-wrap', arguments, only: webkit ms official)\n\nflex-flow()\n  // obsolete\n  -flex-obsolete-direction(arguments[0])\n  -flex-obsolete-direction(arguments[1])\n  -flex-obsolete-wrap(arguments[0])\n  -flex-obsolete-wrap(arguments[1])\n\n  // new\n  if flex in flex-version\n    vendor('flex-flow', arguments, only: webkit ms official)\n\n\norder()\n  // obsolete\n  if box in flex-version\n    vendor('box-ordinal-group', arguments, ignore: ms official)\n\n  // new\n  if flex in flex-version\n    vendor('flex-order', arguments, only: ms)\n    vendor('order', arguments, only: webkit official)\n\n\n//\n// 7. Flexibility\n//    - http://www.w3.org/TR/css3-flexbox/#flexibility\n//\nflex-grow(growth)\n  // obsolete\n  if box in flex-version\n    vendor('box-flex', growth)\n\n  // new\n  if flex in flex-version\n    vendor('flex-grow', arguments, only: webkit official)\n\nflex-basis()\n  if flex in flex-version\n    vendor('flex-basis', arguments, only: webkit official)\n\nflex-shrink()\n  if flex in flex-version\n    vendor('flex-shrink', arguments, only: webkit official)\n\nflex(growth)\n\n  // obsolete\n  if box in flex-version\n    shrink = 1\n\n    if none == growth || initial == growth\n      // Well known values\n      shrink = 0 if none == growth\n      growth = 0\n    else if is-width(growth) == true\n      // Basis is defined as the first parameter\n      growth = arguments[1] || 0\n      shrink = arguments[2] if 3 <= length(arguments)\n    else if arguments[1] && is-width(arguments[1]) == false\n      // Growth is first and shrink is second\n      shrink = arguments[1]\n\n    // Since we can't make the distinction between growing and shrinking in the box model, take\n    // the one that provides the most flexibility.\n    vendor('box-flex', max(growth, shrink), ignore: ms)\n\n  // new\n  if flex in flex-version\n    vendor('flex', arguments, only: webkit ms official)\n\n\n// converts the justification alignment\n-convert-justify(align)\n  if flex-start == align\n    return start\n  else if flex-end == align\n    return end\n  else if space-around == align\n    return distribute\n  else if space-between == align\n    return justify\n  else\n    return align\n\n//\n// 8. Alignment\n//    - http://www.w3.org/TR/css3-flexbox/#alignment\n//\njustify-content(align)\n  // obsolete\n  if box in flex-version\n    vendor('box-pack', -convert-justify(align), ignore: ms official)\n\n  // new\n  if flex in flex-version\n    vendor('flex-pack', -convert-justify(align), only: ms)\n    vendor('justify-content', align, only: webkit official)\n\nalign-content(align)\n  // WARN: Obsolete spec does not allow for adjustment here\n  if flex in flex-version\n    vendor('flex-line-pack', -convert-justify(align), only: ms)\n    vendor('align-content', align, only: webkit official)\n\n// converts alignment from 'flex' to normal value\n-convert-alignment(align)\n  if flex-start == align\n    return start\n  else if flex-end == align\n    return end\n  else\n    return align\n\nalign-items(align)\n  // obsolete\n  if box in flex-version\n    vendor('box-align', -convert-alignment(align), ignore: ms official)\n\n  // new\n  if flex in flex-version\n    vendor('flex-align', -convert-alignment(align), only: ms)\n    vendor('align-items', arguments, only: webkit official)\n\nalign-self(align)\n  // WARN: Obsolete spec does not allow for overriding alignment on individual items.\n  if flex in flex-version\n    vendor('align-self', align, only: webkit official)\n    vendor('flex-item-align', -convert-alignment(align), only: ms)\n","article,\ndetails,\nsection,\nsummary,\naside,\nmain,\nmenu,\nnav,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup {\n  display: block;\n}\naudio,\ncanvas,\nprogress,\nvideo {\n  display: inline-block;\n  vertical-align: baseline;\n}\naudio:not([controls]) {\n  display: none;\n  height: 0;\n}\n[hidden],\ntemplate {\n  display: none;\n}\nhtml {\n  font-family: 'Helvetica Neue', 'Helvetica', 'Arial', 'sans-serif';\n  font-weight: 300;\n  color: #666;\n  font-size: 12px;\n  line-height: 1.75em;\n}\n@media (min-width: 600px) {\n  html {\n    font-size: calc( 12px + (20 - 12) * ((100vw - 600px) / (1140 - 600)) );\n  }\n}\n@media (min-width: 1140px) {\n  html {\n    font-size: 20px;\n  }\n}\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd {\n  margin: 0;\n  padding: 0;\n}\np,\nblockquote,\npre,\naddress,\ndl,\nol,\nul,\ntable {\n  margin-bottom: 1.75em;\n}\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-family: 'Helvetica Neue', 'Helvetica', 'Arial', 'sans-serif';\n  font-weight: 500;\n  color: #111;\n  clear: both;\n}\nh1 {\n  font-size: 27.85438995234061px;\n  margin-top: 0.942400822452556em;\n  line-height: 1.130880986943067em;\n  margin-bottom: 0.188480164490511em;\n}\n@media (min-width: 600px) {\n  h1 {\n    font-size: calc( 27.85438995234061px + (46.423983253901014 - 27.85438995234061) * ((100vw - 600px) / (1140 - 600)) );\n  }\n}\n@media (min-width: 1140px) {\n  h1 {\n    font-size: 46.423983253901014px;\n    margin-top: 0.942400822452556em;\n    line-height: 1.130880986943067em;\n    margin-bottom: 0.188480164490511em;\n  }\n}\nh2 {\n  font-size: 23.53700340860508px;\n  margin-top: 1.115265165420465em;\n  line-height: 1.338318198504558em;\n  margin-bottom: 0.251483121980101em;\n}\n@media (min-width: 600px) {\n  h2 {\n    font-size: calc( 23.53700340860508px + (39.228339014341806 - 23.53700340860508) * ((100vw - 600px) / (1140 - 600)) );\n  }\n}\n@media (min-width: 1140px) {\n  h2 {\n    font-size: 39.228339014341806px;\n    margin-top: 1.115265165420465em;\n    line-height: 1.338318198504558em;\n    margin-bottom: 0.240111086421698em;\n  }\n}\nh3 {\n  font-size: 19.888804974891777px;\n  margin-top: 1.319837970815179em;\n  line-height: 1.583805564978215em;\n  margin-bottom: 0.303784103173448em;\n}\n@media (min-width: 600px) {\n  h3 {\n    font-size: calc( 19.888804974891777px + (33.14800829148629 - 19.888804974891777) * ((100vw - 600px) / (1140 - 600)) );\n  }\n}\n@media (min-width: 1140px) {\n  h3 {\n    font-size: 33.14800829148629px;\n    margin-top: 1.319837970815179em;\n    line-height: 1.583805564978215em;\n    margin-bottom: 0.287857499569283em;\n  }\n}\nh4 {\n  font-size: 16.806071548796314px;\n  margin-top: 1.561935513828041em;\n  line-height: 1.87432261659365em;\n  margin-bottom: 0.368150361036632em;\n}\n@media (min-width: 600px) {\n  h4 {\n    font-size: calc( 16.806071548796314px + (28.01011924799386 - 16.806071548796314) * ((100vw - 600px) / (1140 - 600)) );\n  }\n}\n@media (min-width: 1140px) {\n  h4 {\n    font-size: 28.01011924799386px;\n    margin-top: 1.561935513828041em;\n    line-height: 1.87432261659365em;\n    margin-bottom: 0.345845057728222em;\n  }\n}\nh5 {\n  font-size: 14.201156945318074px;\n  margin-top: 1.84844094752817em;\n  line-height: 2.218129137033805em;\n  margin-bottom: 0.369688189505634em;\n}\n@media (min-width: 600px) {\n  h5 {\n    font-size: calc( 14.201156945318074px + (23.668594908863454 - 14.201156945318074) * ((100vw - 600px) / (1140 - 600)) );\n  }\n}\n@media (min-width: 1140px) {\n  h5 {\n    font-size: 23.668594908863454px;\n    margin-top: 1.84844094752817em;\n    line-height: 2.218129137033805em;\n    margin-bottom: 0.369688189505634em;\n  }\n}\nh6 {\n  font-size: 12px;\n  margin-top: 2.1875em;\n  line-height: 2.625em;\n  margin-bottom: 0.619791666666667em;\n}\n@media (min-width: 600px) {\n  h6 {\n    font-size: calc( 12px + (20 - 12) * ((100vw - 600px) / (1140 - 600)) );\n  }\n}\n@media (min-width: 1140px) {\n  h6 {\n    font-size: 20px;\n    margin-top: 2.1875em;\n    line-height: 2.625em;\n    margin-bottom: 0.473958333333333em;\n  }\n}\nblockquote {\n  font-style: italic;\n}\nblockquote cite {\n  display: block;\n  font-style: normal;\n}\npre {\n  padding: 0.875em;\n  margin-bottom: 1.75em;\n}\npre code {\n  padding: 0;\n}\ncode {\n  font-family: 'Courier New', 'Courier', 'Lucida Sans Typewriter', 'Lucida Typewriter', 'monospace';\n  padding: 0.0875em 0.2625em;\n  line-height: 0;\n}\nbig,\nsmall,\nsub,\nsup {\n  line-height: 0;\n}\nabbr,\nacronym {\n  border-bottom: 1px dotted currentColor;\n  cursor: help;\n}\naddress {\n  font-style: normal;\n}\ndt {\n  color: #111;\n  font-weight: bold;\n}\nul {\n  padding-left: 1.1em;\n}\nol {\n  padding-left: 1.4em;\n}\nfieldset {\n  padding: 0.875em 1.75em 1.75em;\n  border-width: 1px;\n  border-style: solid;\n  max-width: 100%;\n  margin-bottom: 1.8375em;\n}\n@media (min-width: 1140px) {\n  fieldset {\n    margin-bottom: 2.078125em;\n  }\n}\nfieldset button,\nfieldset input[type=\"submit\"] {\n  margin-bottom: 0;\n}\nlegend {\n  color: #111;\n  font-weight: bold;\n}\nlabel {\n  display: block;\n  padding-bottom: 0.21875em;\n  margin-bottom: -0.21875em;\n}\ninput[type=\"text\"],\ninput[type=\"email\"],\ninput[type=\"password\"],\ntextarea {\n  display: block;\n  max-width: 100%;\n  padding: 0.4375em;\n  font-size: 12px;\n  margin-bottom: 1.18125em;\n}\n@media (min-width: 600px) {\n  input[type=\"text\"],\n  input[type=\"email\"],\n  input[type=\"password\"],\n  textarea {\n    font-size: calc( 12px + (20 - 12) * ((100vw - 600px) / (1140 - 600)) );\n  }\n}\n@media (min-width: 1140px) {\n  input[type=\"text\"],\n  input[type=\"email\"],\n  input[type=\"password\"],\n  textarea {\n    font-size: 20px;\n    margin-bottom: 0.5140625em;\n  }\n}\ninput[type=\"submit\"],\nbutton {\n  display: block;\n  cursor: pointer;\n  font-size: 12px;\n  padding: 0.4375em 1.75em;\n  margin-bottom: 1.18125em;\n}\n@media (min-width: 600px) {\n  input[type=\"submit\"],\n  button {\n    font-size: calc( 12px + (20 - 12) * ((100vw - 600px) / (1140 - 600)) );\n  }\n}\n@media (min-width: 1140px) {\n  input[type=\"submit\"],\n  button {\n    font-size: 20px;\n    margin-bottom: 1.3125em;\n  }\n}\ntable {\n  width: 100%;\n  border-spacing: 0;\n  border-collapse: collapse;\n  margin-bottom: 2.1875em;\n}\n@media (min-width: 1140px) {\n  table {\n    margin-bottom: 2.05625em;\n  }\n}\nth {\n  text-align: left;\n  color: #111;\n  padding: 0.21875em 0.875em;\n}\n@media (min-width: 1140px) {\n  th {\n    padding: 0.4375em 0.875em;\n  }\n}\ntd {\n  padding: 0.21875em 0.875em;\n}\n@media (min-width: 1140px) {\n  td {\n    padding: 0.4375em 0.875em;\n  }\n}\nhtml {\n  font-family: 'Open Sans';\n}\nhtml body {\n  margin: 0;\n}\nhtml .btn {\n  -webkit-border-radius: 22px;\n  border-radius: 22px;\n  color: #fff;\n  display: inline-block;\n  font-weight: 400;\n  line-height: 44px;\n  text-decoration: none;\n  width: auto;\n}\nhtml .btn__green {\n  background: #3dd2ae;\n  font-size: 14px;\n  padding: 0 50px;\n}\nsection.top {\n  lost-center: 1920px;\n  background: url(\"../img/top-bg.jpg\") no-repeat center center fixed;\n  -webkit-background-size: cover;\n  -moz-background-size: cover;\n  background-size: cover;\n  color: #fff;\n}\nsection.top header {\n  lost-utility: clearfix;\n  margin: 46px 70px 0 82px;\n}\nsection.top header .logo {\n  lost-column: 1/3;\n  text-align: left;\n}\nsection.top header div {\n  lost-column: 2/3;\n  text-align: right;\n}\nsection.top header div .input__search {\n  position: absolute;\n  top: 0;\n  right: 0;\n  background: #343c48;\n  -webkit-border-radius: 22px;\n  border-radius: 22px;\n  color: #9da5b0;\n  height: 44px;\n  width: 262px;\n}\nsection.top header div .input__search i.fa-search {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n}\nsection.top header div .input__search .btn__magenta {\n  background: #835fa8;\n  font-size: 15px;\n  padding: 0 30px;\n}\nsection.top .container {\n  lost-center: 1180px $container__gutter__s;\n  lost-utility: clearfix;\n}\nsection.top .container .hero {\n  lost-utility: clearfix;\n  margin-bottom: 212px;\n  margin-left: 0;\n  margin-right: 0;\n}\n@media only screen and (min-width: 320px) {\n  section.top .container .hero {\n    margin-left: 15%;\n    margin-right: 4.5%;\n  }\n  section.top .container .hero h1 {\n    font-size: 40px;\n    font-weight: 300;\n    line-height: 50px;\n    color: inherit;\n  }\n  section.top .container .hero p {\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 30px;\n  }\n}\n@media only screen and (min-width: 768px) {\n  section.top .container .hero {\n    margin-left: 39%;\n    margin-right: 9%;\n  }\n  section.top .container .hero h1 {\n    font-size: 70px;\n    font-weight: 300;\n    line-height: 90px;\n    color: inherit;\n  }\n  section.top .container .hero p {\n    font-size: 18px;\n    font-weight: 400;\n    line-height: 30px;\n  }\n}\n","// Typographic v2.9.2 - https://github.com/corysimmons/typographic\n\n\n// Settings\n\n$line-height-ratio  = 1.75\n$header-ratio       = $golden\n$body-font          = $helvetica\n$body-font-weight   = 300\n$body-color         = #666\n$header-font        = $helvetica\n$header-font-weight = 500\n$header-color       = #111\n$min-font           = 12px\n$max-font           = 20px\n$min-width          = 600px\n$max-width          = 1140px\n$vertical-rhythm    = true\n\n\n// Ratios\n\n$minor-second   = 1.067\n$major-second   = 1.125\n$minor-third    = 1.2\n$major-third    = 1.25\n$perfect-fourth = 1.333\n$aug-fourth     = 1.414\n$perfect-fifth  = 1.5\n$minor-sixth    = 1.6\n$golden         = 1.618\n$major-sixth    = 1.667\n$minor-seventh  = 1.778\n$major-seventh  = 1.875\n$octave         = 2\n$major-tenth    = 2.5\n$major-eleventh = 2.667\n$major-twelfth  = 3\n$double-octave  = 4\n\n\n// Sans-serif\n\n$calibri       = 'Calibri', 'Candara', 'Segoe', 'Segoe UI', 'Optima', 'Arial', 'sans-serif'\n$candara       = 'Candara', 'Calibri', 'Segoe', 'Segoe UI', 'Optima', 'Arial', 'sans-serif'\n$courier       = 'Courier New', 'Courier', 'Lucida Sans Typewriter', 'Lucida Typewriter', 'monospace'\n$franklin      = 'Franklin Gothic Medium', 'Arial', 'sans-serif'\n$futura        = 'Futura', 'Trebuchet MS', 'Arial', 'sans-serif'\n$geneva        = 'Geneva', 'Tahoma', 'Verdana', 'sans-serif'\n$gill-sans     = 'Gill Sans', 'Gill Sans MT', 'Calibri', 'sans-serif'\n$helvetica     = 'Helvetica Neue', 'Helvetica', 'Arial', 'sans-serif'\n$lucida-grande = 'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', 'Geneva', 'Verdana', 'sans-serif'\n$optima        = 'Optima', 'Segoe', 'Segoe UI', 'Candara', 'Calibri', 'Arial', 'sans-serif'\n$segoe         = 'Segoe', 'Segoe UI', 'Helvetica Neue', 'Arial', 'sans-serif'\n$tahoma        = 'Tahoma', 'Geneva', 'Verdana', 'sans-serif'\n$trebuchet     = 'Trebuchet MS', 'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', 'Tahoma', 'sans-serif'\n$verdana       = 'Verdana', 'Geneva', 'sans-serif'\n\n\n// Serif\n\n$antiqua       = 'Book Antiqua', 'Palatino', 'Palatino Linotype', 'Palatino LT STD', 'Georgia', 'serif'\n$baskerville   = 'Baskerville', 'Baskerville old face', 'Hoefler Text', 'Garamond', 'Times New Roman', 'serif'\n$bodoni        = 'Bodoni MT', 'Didot', 'Didot LT STD', 'Hoefler Text', 'Garamond', 'Times New Roman', 'serif'\n$cambria       = 'Cambria', 'Georgia', 'serif'\n$caslon        = 'Big Caslon', 'Book Antiqua', 'Palatino Linotype', 'Georgia', 'serif'\n$constantia    = 'Constantia', 'Palatino', 'Palatino Linotype', 'Palatino LT STD', 'Georgia', 'serif'\n$didot         = 'Didot', 'Didot LT STD', 'Hoefler Text', 'Garamond', 'Times New Roman', 'serif'\n$garamond      = 'Garamond', 'Baskerville', 'Baskerville Old Face', 'Hoefler Text', 'Times New Roman', 'serif'\n$goudy         = 'Goudy Old Style', 'Garamond', 'Big Caslon', 'Times New Roman', 'serif'\n$hoefler       = 'Hoefler Text', 'Baskerville old face', 'Garamond', 'Times New Roman', 'serif'\n$lucida-bright = 'Lucida Bright', 'Georgia', 'serif'\n$palatino      = 'Palatino', 'Palatino Linotype', 'Palatino LT STD', \"Book Antiqua\", 'Georgia', 'serif'\n\n\n// Helpers\n\n/**\n * Creates a baseline grid based off your $line-height-ratio to help visualize your vertical rhythm grid. You can offset the grid by negative or positive pixels to line it up perfectly with the bottom of your text.\n *\n * @param {color} [$color=black] - A color to be lightened and used as the color for the grid.\n * @param {number} [$px-offset=false] - A positive or negative number of pixels to offset the grid by. Useful for lining the bottom of the gridlines up with your text.\n *\n * @example\n *   grid-overlay(blue, 2)\n */\n\ngrid-overlay($color = black, $px-offset = false)\n  body\n    background: linear-gradient(to top, rgba($color, 10%) 5%, white 5%)\n    background-size: 100% ($line-height-ratio)em\n    if $px-offset\n      background-position: 0 unit($px-offset, 'px')\n\n\n/**\n * Returns a \"vertical unit\". Useful for specifying the height and margins of non-text elements like images and such.\n *\n * @param {number} [$units=1] - Number of units. Accepts floated numbers as well.\n * @param {number} [$px-offset=false] - A positive or negative number of pixels to offset the grid by. Useful for lining the bottom of the gridlines up with your text. Since this doesn't compute a literal pixel you may need to use a floated number (multiples of .25 work well) to keep your rhythm on track.\n *\n * @example\n *   img\n *     vr-block(5.25, .5)\n */\n\nvr-block($units = 1, $px-offset = false)\n  if $px-offset\n    return ( (($line-height-ratio * $max-font) / ($max-font / 2)) * ($units / 2) * (1 + ($px-offset / $max-font)) )em\n  else\n    return ( (($line-height-ratio * $max-font) / ($max-font / 2)) * ($units / 2) )em\n\n\n// Typography Mixins\n\nt-html()\n  font-family: $body-font\n  font-weight: $body-font-weight\n  color: $body-color\n\n  font-size: $min-font\n  line-height: ($line-height-ratio)em\n\n  @media (min-width: $min-width)\n    font-size: s('calc( %s + (%s - %s) * ((100vw - %s) / (%s - %s)) )', $min-font, remove-unit($max-font), remove-unit($min-font), $min-width, remove-unit($max-width), remove-unit($min-width))\n\n  @media (min-width: $max-width)\n    font-size: $max-font\n\nt-p = t-html\n\nt-reset()\n  margin: 0\n  padding: 0\n\nt-block()\n  margin-bottom: ($line-height-ratio)em\n\nt-header()\n  font-family: $header-font\n  font-weight: $header-font-weight\n  color: $header-color\n  clear: both\n\nt-h1()\n  $local-min-font = $min-font * ($header-ratio ** 1.75)\n  $local-max-font = $max-font * ($header-ratio ** 1.75)\n\n  font-size: $local-min-font\n  if $vertical-rhythm is true\n    margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25))em\n    line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5))em\n    margin-bottom: (($line-height-ratio * $min-font) / ($local-min-font / .25))em\n  else\n    margin-top: 0\n    line-height: 1.1em\n    margin-bottom: .25em\n\n  @media (min-width: $min-width)\n    font-size: s('calc( %s + (%s - %s) * ((100vw - %s) / (%s - %s)) )', $local-min-font, remove-unit($local-max-font), remove-unit($local-min-font), $min-width, remove-unit($max-width), remove-unit($min-width))\n\n  @media (min-width: $max-width)\n    font-size: $local-max-font\n    if $vertical-rhythm is true\n      margin-top: (($line-height-ratio * $max-font) / ($local-max-font / 1.25))em\n      line-height: (($line-height-ratio * $max-font) / ($local-max-font / 1.5))em\n      margin-bottom: (($line-height-ratio * $max-font) / ($local-max-font / .25))em\n\nt-h2()\n  $local-min-font = $min-font * ($header-ratio ** 1.4)\n  $local-max-font = $max-font * ($header-ratio ** 1.4)\n\n  font-size: $local-min-font\n  if $vertical-rhythm is true\n    margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25))em\n    line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5))em\n    margin-bottom: (($line-height-ratio * $min-font) / ($local-min-font / .25) * (1 + (3 / $local-min-font)))em\n  else\n    margin-top: 0\n    line-height: 1.2em\n    margin-bottom: .25em\n\n  @media (min-width: $min-width)\n    font-size: s('calc( %s + (%s - %s) * ((100vw - %s) / (%s - %s)) )', $local-min-font, remove-unit($local-max-font), remove-unit($local-min-font), $min-width, remove-unit($max-width), remove-unit($min-width))\n\n  @media (min-width: $max-width)\n    font-size: $local-max-font\n    if $vertical-rhythm is true\n      margin-top: (($line-height-ratio * $max-font) / ($local-max-font / 1.25))em\n      line-height: (($line-height-ratio * $max-font) / ($local-max-font / 1.5))em\n      margin-bottom: (($line-height-ratio * $max-font) / ($local-max-font / .25) * (1 + (3 / $local-max-font)))em\n\nt-h3()\n  $local-min-font = $min-font * ($header-ratio ** 1.05)\n  $local-max-font = $max-font * ($header-ratio ** 1.05)\n\n  font-size: $local-min-font\n  if $vertical-rhythm is true\n    margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25))em\n    line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5))em\n    margin-bottom: (($line-height-ratio * $min-font) / ($local-min-font / .25) * (1 + (3 / $local-min-font)))em\n  else\n    margin-top: 0\n    line-height: 1.3em\n    margin-bottom: .25em\n\n  @media (min-width: $min-width)\n    font-size: s('calc( %s + (%s - %s) * ((100vw - %s) / (%s - %s)) )', $local-min-font, remove-unit($local-max-font), remove-unit($local-min-font), $min-width, remove-unit($max-width), remove-unit($min-width))\n\n  @media (min-width: $max-width)\n    font-size: $local-max-font\n    if $vertical-rhythm is true\n      margin-top: (($line-height-ratio * $max-font) / ($local-max-font / 1.25))em\n      line-height: (($line-height-ratio * $max-font) / ($local-max-font / 1.5))em\n      margin-bottom: (($line-height-ratio * $max-font) / ($local-max-font / .25) * (1 + (3 / $local-max-font)))em\n\nt-h4()\n  $local-min-font = $min-font * ($header-ratio ** .7)\n  $local-max-font = $max-font * ($header-ratio ** .7)\n\n  font-size: $local-min-font\n  if $vertical-rhythm is true\n    margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25))em\n    line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5))em\n    margin-bottom: (($line-height-ratio * $min-font) / ($local-min-font / .25) * (1 + (3 / $local-min-font)))em\n  else\n    margin-top: 0\n    line-height: 1.4em\n    margin-bottom: .25em\n\n  @media (min-width: $min-width)\n    font-size: s('calc( %s + (%s - %s) * ((100vw - %s) / (%s - %s)) )', $local-min-font, remove-unit($local-max-font), remove-unit($local-min-font), $min-width, remove-unit($max-width), remove-unit($min-width))\n\n  @media (min-width: $max-width)\n    font-size: $local-max-font\n    if $vertical-rhythm is true\n      margin-top: (($line-height-ratio * $max-font) / ($local-max-font / 1.25))em\n      line-height: (($line-height-ratio * $max-font) / ($local-max-font / 1.5))em\n      margin-bottom: (($line-height-ratio * $max-font) / ($local-max-font / .25) * (1 + (3 / $local-max-font)))em\n\nt-h5()\n  $local-min-font = $min-font * ($header-ratio ** .35)\n  $local-max-font = $max-font * ($header-ratio ** .35)\n\n  font-size: $local-min-font\n  if $vertical-rhythm is true\n    margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25))em\n    line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5))em\n    margin-bottom: (($line-height-ratio * $min-font) / ($local-min-font / .25))em\n  else\n    margin-top: 0\n    line-height: 1.5em\n    margin-bottom: .25em\n\n  @media (min-width: $min-width)\n    font-size: s('calc( %s + (%s - %s) * ((100vw - %s) / (%s - %s)) )', $local-min-font, remove-unit($local-max-font), remove-unit($local-min-font), $min-width, remove-unit($max-width), remove-unit($min-width))\n\n  @media (min-width: $max-width)\n    font-size: $local-max-font\n    if $vertical-rhythm is true\n      margin-top: (($line-height-ratio * $max-font) / ($local-max-font / 1.25))em\n      line-height: (($line-height-ratio * $max-font) / ($local-max-font / 1.5))em\n      margin-bottom: (($line-height-ratio * $max-font) / ($local-max-font / .25))em\n\nt-h6()\n  $local-min-font = $min-font\n  $local-max-font = $max-font\n\n  font-size: $local-min-font\n  if $vertical-rhythm is true\n    margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25))em\n    line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5))em\n    margin-bottom: (($line-height-ratio * $min-font) / ($local-min-font / .25) * (1 + (5 / $local-min-font)))em\n  else\n    margin-top: 0\n    line-height: 1.6em\n    margin-bottom: .25em\n\n  @media (min-width: $min-width)\n    font-size: s('calc( %s + (%s - %s) * ((100vw - %s) / (%s - %s)) )', $local-min-font, remove-unit($local-max-font), remove-unit($local-min-font), $min-width, remove-unit($max-width), remove-unit($min-width))\n\n  @media (min-width: $max-width)\n    font-size: $local-max-font\n    if $vertical-rhythm is true\n      margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25))em\n      line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5))em\n      margin-bottom: (($line-height-ratio * $min-font) / ($local-min-font / .25) * (1 + (1 / $local-min-font)))em\n\nt-blockquote()\n  font-style: italic\n  cite\n    display: block\n    font-style: normal\n\nt-pre()\n  padding: vr-block(.5)\n  margin-bottom: vr-block(1)\n  code\n    padding: 0\n\nt-code()\n  font-family: $courier\n  padding: ($line-height-ratio * .05)em ($line-height-ratio * .15)em\n  line-height: 0\n\nt-abbr()\n  border-bottom: 1px dotted currentColor\n  cursor: help\n\nt-dt()\n  color: $header-color\n  font-weight: bold\n\nt-fieldset()\n  padding: vr-block(.5) vr-block() vr-block()\n  border-width: 1px\n  border-style: solid\n  max-width: 100%\n  margin-bottom: vr-block(1, 1)\n\n  @media (min-width: $max-width)\n    margin-bottom: vr-block(1.25, -1)\n\n  button, input[type=\"submit\"]\n    margin-bottom: 0\n\nt-legend()\n  color: $header-color\n  font-weight: bold\n\nt-label()\n  display: block\n  padding-bottom: vr-block(.125)\n  margin-bottom: vr-block(-.25, -10)\n\nt-input()\n  $local-min-font = $min-font\n  $local-max-font = $max-font\n\n  display: block\n  max-width: 100%\n  padding: vr-block(.25)\n\n  font-size: $local-min-font\n  margin-bottom: vr-block(.5, 7)\n\n  @media (min-width: $min-width)\n    font-size: s('calc( %s + (%s - %s) * ((100vw - %s) / (%s - %s)) )', $local-min-font, remove-unit($local-max-font), remove-unit($local-min-font), $min-width, remove-unit($max-width), remove-unit($min-width))\n\n  @media (min-width: $max-width)\n    font-size: $local-max-font\n    margin-bottom: vr-block(.25, 3.5)\n\nt-button()\n  $local-min-font = $min-font\n  $local-max-font = $max-font\n\n  display: block\n  cursor: pointer\n\n  font-size: $local-min-font\n  padding: vr-block(.25) vr-block()\n  margin-bottom: vr-block(.75, -2)\n\n  @media (min-width: $min-width)\n    font-size: s('calc( %s + (%s - %s) * ((100vw - %s) / (%s - %s)) )', $local-min-font, remove-unit($local-max-font), remove-unit($local-min-font), $min-width, remove-unit($max-width), remove-unit($min-width))\n\n  @media (min-width: $max-width)\n    font-size: $local-max-font\n    margin-bottom: vr-block(.75)\n\nt-table()\n  width: 100%\n  border-spacing: 0\n  border-collapse: collapse\n  margin-bottom: vr-block(1, 5)\n\n  @media (min-width: $max-width)\n    margin-bottom: vr-block(1, 3.5)\n\nt-th()\n  text-align: left\n  color: $header-color\n\n  padding: vr-block(.125) vr-block(.5)\n\n  @media (min-width: $max-width)\n    padding: vr-block(.25) vr-block(.5)\n\nt-td()\n  padding: vr-block(.125) vr-block(.5)\n\n  @media (min-width: $max-width)\n    padding: vr-block(.25) vr-block(.5)\n\n/**\n * The Typographic Reset. This is where Typographic goes through every markup element and styles it to adhere to a vertical rhythm. After you set your variables in a settings file fire this mixin.\n *\n * @example\n *   typographic()\n */\n\ntypographic()\n\n  html\n    t-html()\n\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td\n    t-reset()\n\n  p, blockquote, pre,\n  address,\n  dl, ol, ul,\n  table\n    t-block()\n\n  h1, h2, h3, h4, h5, h6\n    t-header()\n\n  h1\n    t-h1()\n\n  h2\n    t-h2()\n\n  h3\n    t-h3()\n\n  h4\n    t-h4()\n\n  h5\n    t-h5()\n\n  h6\n    t-h6()\n\n  blockquote\n    t-blockquote()\n\n  pre\n    t-pre()\n\n  code\n    t-code()\n\n  big, small, sub, sup\n    line-height: 0\n\n  abbr, acronym\n    t-abbr()\n\n  address\n    font-style: normal\n\n  dt\n    t-dt()\n\n  ul\n    padding-left: 1.1em\n\n  ol\n    padding-left: 1.4em\n\n  fieldset\n    t-fieldset()\n\n  legend\n    t-legend()\n\n  label\n    t-label()\n\n  input[type=\"text\"], input[type=\"email\"], input[type=\"password\"], textarea\n    t-input()\n\n  input[type=\"submit\"], button\n    t-button()\n\n  table\n    t-table()\n\n  th\n    t-th()\n\n  td\n    t-td()\n","use('../nodes/vendor-helpers.js')\n@import 'config'\n\n/*\n * Alias \"nowrap\" as \"no-wrap\".\n */\n\nno-wrap = unquote('nowrap')\n\n/*\n * Helper to find out if a given value is a width\n */\n\nis-width(val)\n  if auto == val\n    return true\n  else if val && 'unit' == type(val)\n    // Stylus does not short circuit so we need to perform this as a distinct\n    // operation to prevent errors\n    return '' != unit(val)\n  return false\n\n/*\n * Vendor support for the given prop / arguments, optionally specifying the\n * only prefixes to utilize, or those which should be ignored.\n */\n\nvendor(prop, args, only = null, ignore = null, vendor-property = true)\n  need_normalize = !vendor-property or prop in ('transition' 'transition-property' 'border-image' 'border-image-slice')\n  for prefix in vendor-prefixes\n    unless (only and !(prefix in only)) or (ignore and prefix in ignore)\n      if official == prefix\n        if need_normalize\n          {prop}: normalize(prop,('%s' % args))\n        else\n          {prop}: args\n      else\n        newprop = prop\n        newprop = '-' + prefix + '-' + prop if vendor-property\n\n        if need_normalize\n          {newprop}: normalize(prop,('%s' % args),prefix)\n        else\n          {newprop}: args\n/*\n * Vendorize the given value.\n */\n\nvendor-value(arg, only = null, ignore = null)\n  prop = current-property[0]\n  for prefix in vendor-prefixes\n    unless (only and !(prefix in only)) or (ignore and prefix in ignore) or official == prefix\n      add-property(prop, '-%s-%s' % (prefix arg))\n  arg\n\n/*\n * Vendor \"box-shadow\" support.\n */\n\nbox-shadow()\n  vendor('box-shadow', arguments, only: webkit official)\n\n/*\n * Vendor \"user-select\" support.\n */\n\nuser-select()\n  vendor('user-select', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"column-count\" support.\n */\n\ncolumn-count()\n  vendor('column-count', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-gap\" support.\n */\n\ncolumn-gap()\n  vendor('column-gap', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-rule\" support.\n */\n\ncolumn-rule()\n  vendor('column-rule', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-rule-color\" support.\n */\n\ncolumn-rule-color()\n  vendor('column-rule-color', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-rule-width\" support.\n */\n\ncolumn-rule-width()\n  vendor('column-rule-width', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-rule-style\" support.\n */\n\ncolumn-rule-style()\n  vendor('column-rule-style', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-width\" support.\n */\n\ncolumn-width()\n  vendor('column-width', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-span\" support.\n */\n\ncolumn-span()\n  vendor('column-span', arguments, only: webkit official)\n\n/*\n * Vendor \"column-fill\" support.\n */\n\ncolumn-fill()\n  vendor('column-fill', arguments, only: moz)\n\n/*\n * Legacy syntax support for background-clip and background-origin\n */\n\nlegacy-bg-values(property, args)\n  legacy_args = ()\n  importance = unquote('')\n  for subargs in args\n    for arg in subargs\n      if arg in (border-box padding-box content-box)\n        arg = unquote('border')  if arg == border-box\n        arg = unquote('padding') if arg == padding-box\n        arg = unquote('content') if arg == content-box\n      if arg != '!important'\n        push(legacy_args,arg)\n      else\n        importance = !important\n  vendor(property, unquote(join(', ',legacy_args)) importance, only: moz webkit)\n\n/*\n * Vendor \"background-clip\" support.\n */\n\nbackground-clip()\n  if arguments[0] == text\n    vendor('background-clip', arguments, only: webkit)\n  else\n    legacy-bg-values('background-clip', arguments)\n    background-clip: arguments\n\n/*\n * Vendor \"background-origin\" support.\n */\n\nbackground-origin()\n  legacy-bg-values('background-origin', arguments)\n  background-origin: arguments\n\n/*\n * Vendor \"background-size\" support.\n */\n\nbackground-size()\n  vendor('background-size', arguments, only: webkit moz official)\n\n/*\n * Vendor \"transform\" support.\n */\n\ntransform()\n  vendor('transform', arguments)\n\n/*\n * Vendor \"transform-origin\" support.\n */\ntransform-origin()\n    vendor('transform-origin', arguments)\n\n/*\n * Vendor \"transform-style\" support.\n */\n\ntransform-style()\n  vendor('transform-style', arguments)\n\n/*\n * Vendor \"border-image\" support.\n */\n\nborder-image()\n  vendor('border-image', arguments, only: webkit moz o official)\n\n/*\n * Vendor \"transition\" support.\n */\n\ntransition()\n  vendor('transition', arguments)\n\n/*\n * Vendor \"transition-property\" support.\n */\n\ntransition-property()\n  vendor('transition-property', arguments)\n\n/*\n * Vendor \"transition-duration\" support.\n */\n\ntransition-duration()\n  vendor('transition-duration', arguments)\n\n/*\n * Vendor \"transition-timing-function\" support.\n */\n\ntransition-timing-function()\n  vendor('transition-timing-function', arguments)\n\n/*\n * Vendor \"transition-delay\" support.\n */\n\ntransition-delay()\n  vendor('transition-delay', arguments)\n\n/*\n * Vendor \"backface-visibility\" support.\n */\n\nbackface-visibility()\n  vendor('backface-visibility', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"perspective\" support.\n */\n\nperspective()\n  if mixin\n    vendor('perspective', arguments, only: webkit moz ms official)\n  else\n    'perspective(%s)' % arguments\n\n/*\n * Vendor \"perspective-origin\" support.\n */\n\nperspective-origin()\n  vendor('perspective-origin', arguments, only: webkit moz ms official)\n\n/*\n * Opacity with conditional IE support.\n */\n\nopacity(n, args...)\n  opacity: n args\n  if support-for-ie\n    if n == inherit or n == initial\n      -ms-filter: n args\n      filter: n args\n    else\n      val = round(n * 100)\n      if val == 100\n        -ms-filter: none args\n        filter: none args\n      else\n        -ms-filter: '\"progid:DXImageTransform.Microsoft.Alpha(Opacity=%s)\"' % val args\n        filter: 'alpha(opacity=%s)' % val args\n\n/*\n * Vendor \"text-size-adjust\"\n */\n\ntext-size-adjust()\n  vendor('text-size-adjust', arguments)\n\n/*\n * Alias the \"white-space\" property.\n */\n\nwhitespace()\n  white-space: arguments\n\n/*\n * Vendor \"box-sizing\" support.\n */\n\nbox-sizing()\n  vendor('box-sizing', arguments, only: webkit moz official)\n\n/*\n * Vendor \"box-orient\" support.\n */\n\nbox-orient()\n  vendor('box-orient', arguments, only: webkit moz official)\n\n/*\n * Vendor \"box-flex-group\" support.\n */\n\nbox-flex-group()\n  vendor('box-flex-group', arguments, only: webkit moz official)\n\n/*\n * Vendor \"box-ordinal-group\" support.\n */\n\nbox-ordinal-group()\n  vendor('box-ordinal-group', arguments, only: webkit moz ms official)\n\n\n/*\n * Vendor \"box-align\" support.\n */\n\nbox-align()\n  vendor('box-align', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"box-pack\" support.\n */\n\nbox-pack()\n  vendor('box-pack', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"box-direction\" support.\n */\n\nbox-direction()\n  vendor('box-direction', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"animation\" support.\n */\n\nanimation()\n  vendor('animation', arguments)\n\n\n/*\n * Vendor \"animation-name\" support.\n */\n\nanimation-name()\n  vendor('animation-name', arguments)\n\n/*\n * Vendor \"animation-duration\" support.\n */\n\nanimation-duration()\n  vendor('animation-duration', arguments)\n\n/*\n * Vendor \"animation-delay\" support.\n */\n\nanimation-delay()\n  vendor('animation-delay', arguments)\n\n/*\n * Vendor \"animation-direction\" support.\n */\n\nanimation-direction()\n  vendor('animation-direction', arguments)\n\n/*\n * Vendor \"animation-iteration-count\" support.\n */\n\nanimation-iteration-count()\n  vendor('animation-iteration-count', arguments)\n\n/*\n * Vendor \"animation-timing-function\" support.\n */\n\nanimation-timing-function()\n  vendor('animation-timing-function', arguments)\n\n/*\n * Vendor \"animation-play-state\" support.\n */\n\nanimation-play-state()\n  vendor('animation-play-state', arguments)\n\n/*\n * Vendor \"animation-fill-mode\" support.\n */\n\nanimation-fill-mode()\n  vendor('animation-fill-mode', arguments)\n\n/*\n * Vendor \"hyphens\" support.\n */\n\nhyphens()\n  vendor('hyphens', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"appearance\" support.\n */\n\nappearance()\n  vendor('appearance', arguments, only: webkit moz official)\n\n/*\n * Vendor \"tab-size\" support.\n */\n\ntab-size()\n  vendor('tab-size', arguments, only: moz o official)\n\n/*\n * Vendor \"overflow-scrolling\" support.\n */\n\noverflow-scrolling()\n  vendor('overflow-scrolling', arguments, only: webkit official)\n\n/*\n * Vendor \"text-overflow\" support, , -o- for opera 9.* - 10.*\n */\n\ntext-overflow()\n  vendor('text-overflow', arguments, only: official o)\n\n/*\n * Vendor \"text-size-adjust\" support.\n */\ntext-size-adjust()\n  vendor('text-size-adjust', arguments, only: official webkit ms)\n\n/*\n * Vendor \"font-smoothing\" support, webkit only.\n */\nfont-smoothing()\n  vendor('font-smoothing', arguments, only: webkit)\n\n/*\n * Helper for border-radius().\n */\n\n-apply-border-radius(pos, importance)\n  if length(pos) == 3\n    // border-radius: <top | buttom> <left | right> <n>\n    y = pos[0]\n    x = pos[1]\n    // We don't use moz for simple boder-radius anymore\n    // vendor('border-radius-%s%s' % pos, pos[2], only: moz)\n    vendor('border-%s-%s-radius' % pos, pos[2] importance, only: webkit official)\n  else if pos[0] in (top bottom)\n    // border-radius: <top | bottom> <n>\n    -apply-border-radius(pos[0] left pos[1], importance)\n    -apply-border-radius(pos[0] right pos[1], importance)\n  else if pos[0] in (left right)\n    // border-radius: <left | right> <n>\n    unshift(pos, top);\n    -apply-border-radius(pos, importance)\n    pos[0] = bottom\n    -apply-border-radius(pos, importance)\n\n/*\n * border-radius supporting vendor prefixes and\n * augmented behavior.\n *\n * Examples:\n *\n *    border-radius: 2px 5px\n *    border-radius: top 5px bottom 10px\n *    border-radius: left 5px\n *    border-radius: top left 5px\n *    border-radius: top left 10px bottom right 5px\n *    border-radius: top left 10px, bottom right 5px\n *\n */\n\nborder-radius()\n  pos = ()\n  augmented = false\n  importance = arguments[length(arguments) - 1] == !important ? !important : unquote('')\n\n  for args in arguments\n    for arg in args\n      if arg is a 'ident'\n        append(pos, arg)\n        augmented = true\n      else\n        append(pos, arg)\n        if augmented\n          -apply-border-radius(pos, importance)\n          pos = ()\n  vendor('border-radius', pos, only: webkit official) unless augmented\n\n/**\n * Vendor input-placeholder/placeholder support.\n *\n * Examples:\n *    // Default syntax\n *    body\n *      placeholder(color #333, font-weight normal)\n *\n *    // The comma is important\n *    .placeholder-red\n *      placeholder(color red,)\n *\n *    // We can pass a function\n *    green-placeholder()\n *      color green\n *    .placeholder-green\n *      placeholder(green-placeholder)\n *\n *    // We can pass a hash\n *    textarea\n *      placeholder((font-style italic) (font-weight bold) (padding '4px 10px'))\n */\nplaceholder()\n  for v in ':-webkit-input' '-moz' ':-moz' '-ms-input'\n    &:{v}-placeholder\n      for pair in arguments\n        if typeof(pair) == 'function'\n          pair()\n        else if pair is not null && pair[0] is not null\n          {pair[0]}: type(pair[1]) == 'string' ? s(pair[1]) : pair[1]\ninput-placeholder = placeholder\n\n/*\n * Vendor background support (gradients).\n */\n\nbackground()\n  if match('-gradient\\(', ''+arguments)\n    vendor('background', arguments, vendor-property: false)\n  else\n    background arguments\n\nbackground-image()\n  if match('-gradient\\(', ''+arguments)\n    vendor('background-image', arguments, vendor-property: false)\n  else\n    background-image arguments\n\ncursor()\n  if match('-gradient\\(', ''+arguments)\n    vendor('cursor', arguments, vendor-property: false)\n  else\n    cursor arguments\n\nlist-style()\n  if match('-gradient\\(', ''+arguments)\n    vendor('list-style', arguments, vendor-property: false)\n  else\n    list-style arguments\n\nlist-style-image()\n  if match('-gradient\\(', ''+arguments)\n    vendor('list-style-image', arguments, vendor-property: false)\n  else\n    list-style-image arguments\n","@require 'extras/variables'\n@require 'typographic'\n@require 'rupture'\n@require 'nib'\n\nnormalize-html5()\n\ntypographic()\n\n// Rupture - Breaking Points\nrupture.scale = 0 320px 480px 768px 1024px 1180px\nrupture.scale-names = 'xs' 's' 'm' 'l' 'xl'\n\nhtml\n  font-family: $base__fntfml\n\n  body\n    margin: 0\n\n\n  .btn\n    border-radius: 22px\n    color: #fff\n    display: inline-block\n    font-weight: $fw__400\n    line-height: 44px\n    text-decoration: none\n    width: auto\n\n  .btn__green\n    background: $btn__green-bg\n    font-size: $btn__green-fs\n    padding: 0 50px\n\n\n// Section Top\nsection.top\n  lost-center: 1920px\n  background: url('../img/top-bg.jpg') no-repeat center center fixed\n  background-size: cover\n\n  color: $base__fntclr\n\n\n  // Section Top -- Header\n  header\n    lost-utility: clearfix\n    margin: 46px 70px 0 82px\n\n    .logo\n      lost-column: 1/3\n      text-align: left\n\n    div\n      lost-column: 2/3\n      text-align: right\n\n      .input__search\n        position: absolute\n        top: 0\n        right: 0\n        background: #343c48\n        border-radius: 22px\n        color: $input__search-clr\n        height: 44px\n        width: 262px\n        //margin-right: 50px\n\n        i.fa-search\n          position: absolute\n          top: 10px\n          right: 10px\n\n        .btn__magenta\n          background: $btn__magenta-bg\n          font-size: $btn__magenta-fs\n          padding: 0 30px\n\n\n  // Section Top -- Hero\n  .container\n    lost-center: $container__width $container__gutter__s\n    lost-utility: clearfix\n\n    .hero\n      lost-utility: clearfix\n      margin-bottom: 212px\n      margin-left: 0\n      margin-right: 0\n\n      +above(2)\n        margin-left: 15%\n        margin-right: 4.5%\n\n        h1\n          font-size: $fs__40\n          font-weight: $fw__300\n          line-height: 50px\n          color: inherit\n\n        p\n          font-size: $fs__16\n          font-weight: $fw__400\n          line-height: 30px\n\n      +above(4)\n        margin-left: 39%\n        margin-right: 9%\n\n        h1\n          font-size: $fs__70\n          font-weight: $fw__300\n          line-height: 90px\n          color: inherit\n\n        p\n          font-size: $fs__18\n          font-weight: $fw__400\n          line-height: 30px\n\n","base-font-size ?= 16px\nrasterise-media-queries ?= false\n\nrupture = {\n  rasterise-media-queries: rasterise-media-queries\n  mobile-cutoff: 400px\n  desktop-cutoff: 1050px\n  hd-cutoff: 1800px\n  enable-em-breakpoints: false\n  base-font-size: base-font-size\n  anti-overlap: false\n  density-queries: 'dppx' 'webkit' 'moz' 'dpi'\n  retina-density: 1.5\n  use-device-width: false\n}\nrupture.scale = 0 (rupture.mobile-cutoff) 600px 800px (rupture.desktop-cutoff) (rupture.hd-cutoff)\nrupture.scale-names = 'xs' 's' 'm' 'l' 'xl' 'hd'\n\n-is-string(val)\n  if typeof(val) is not 'unit'\n    if val is a 'string' or val is a 'ident'\n      true\n    else\n      false\n  else\n    false\n\n-get-scale-number(scale-name)\n  for list-item, i in rupture.scale-names\n    if list-item is scale-name\n      return i + 1\n  return false\n\n-convert-to(to-unit, value, context = rupture.base-font-size)\n  from-unit = unit(value)\n  return value if to-unit is from-unit\n  if to-unit in ('em' 'rem')\n    return value if from-unit in ('em' 'rem')\n    return unit((value / context), to-unit)\n  if to-unit is 'px'\n    return unit((value * context), 'px')\n\n-on-scale(n)\n  return unit(n) is ''\n\n-larger-than-scale(n)\n  return (n > (length(rupture.scale) - 1)) and -on-scale(n)\n\n-is-zero(n)\n  return n is 0\n\n-overlap-shift(anti-overlap, n)\n  shift-unit = unit(n)\n  anti-overlap = 0px unless anti-overlap\n  anti-overlap = 1px if anti-overlap is true\n  if length(anti-overlap) is 1\n    return -convert-to(shift-unit, anti-overlap)\n  for val in anti-overlap\n    return val if unit(val) is shift-unit\n\n-adjust-overlap(anti-overlap, n, side = 'min')\n  -shift = -overlap-shift(anti-overlap, n)\n  if (side is 'min' and -shift > 0) or (side is 'max' and -shift < 0)\n    n = n + -shift\n  return n\n\n-is-positive(n)\n  return n >= 0\n\n-density-queries(density)\n  if typeof(density) is not 'unit'\n    if not -is-string(density)\n      density = '%s' % density\n  density = rupture.retina-density if density is 'retina'\n  queries = ()\n  for query in rupture.density-queries\n    if query is 'webkit'\n      push(queries, '(-webkit-min-device-pixel-ratio: %s)' % (density))\n    else if query is 'moz'\n      push(queries, '(min--moz-device-pixel-ratio: %s)' % (density))\n    else if query is 'o'\n      push(queries, '(-o-min-device-pixel-ratio: %s/1)' % (density))\n    else if query is 'ratio'\n      push(queries, '(min-device-pixel-ratio: %s)' % (density))\n    else if query is 'dpi'\n      if -is-string(density)\n        density=convert(density)\n      push(queries, '(min-resolution: %sdpi)' % (round(density * 96, 1)))\n    else if query is 'dppx'\n      push(queries, '(min-resolution: %sdppx)' % (density))\n  return queries\n\ncreate-fallback-class(selected, class)\n  /{'' + class + ' ' + selected}\n    {block}\n\n// +between(min, max)\n// usage (scale can be mixed with custom values):\n//   - +between(1, 3) scale:scale\n//   - +between(0, 3) 0 width:scale\n//   - +between(200px, 500px) custom:custom\n//   - +between(0, 300px) 0 width:custom\n//   - +between(1, 300px) scale:custom\n//   - +between(200px, 4) custom:scale\n\nbetween(min, max, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  selected = selector()\n\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  if -is-string(min)\n    min = -get-scale-number(min)\n  if -is-string(max)\n    max = -get-scale-number(max)\n\n  -min = rupture.scale[min - 1] unless -is-zero(min) or (not -on-scale(min))\n  -max = rupture.scale[max] unless not -on-scale(max)\n  -min ?= min\n  -max ?= max\n\n  if (rupture.rasterise-media-queries)\n    if not (density or -max or orientation)\n      {block}\n  else\n    condition = 'only screen'\n    use-device-width = use-device-width ? 'device-' : ''\n    unless -min is 0\n      -min = -convert-to('em', -min) if rupture.enable-em-breakpoints\n      -min = -adjust-overlap(anti-overlap, -min, side: 'min')\n      condition = condition + ' and (min-' + use-device-width + 'width: %s)' % (-min)\n    unless -larger-than-scale(max)\n      -max = -convert-to('em', -max) if rupture.enable-em-breakpoints\n      -max = -adjust-overlap(anti-overlap, -max, side: 'max')\n      condition = condition + ' and (max-' + use-device-width + 'width: %s)' % (-max)\n    if orientation\n      condition = condition + ' and (orientation: %s)' % (orientation)\n    if density\n      conditions = ()\n      for query in -density-queries(density)\n        push(conditions, condition + ' and %s' % (query))\n      condition = join(', ', conditions)\n    @media condition\n      {block}\n  if fallback-class\n    +create-fallback-class(selected, fallback-class)\n      {block}\n\nat(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(scale-point, scale-point, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nfrom-width(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(scale-point, length(rupture.scale), anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nabove = from-width\n\nto-width(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(1, scale-point, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nbelow = to-width\n\nmobile(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +below(rupture.mobile-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ntablet(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(rupture.mobile-cutoff, rupture.desktop-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ndesktop(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +above(rupture.desktop-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nhd(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +above(rupture.hd-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ndensity(density, orientation = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    conditions = ()\n    for query in -density-queries(density)\n      condition = 'only screen and %s' % (query)\n      if orientation\n        condition = condition + ' and (orientation: %s)' % (orientation)\n      push(conditions, condition)\n    condition = join(', ', conditions)\n    @media condition\n      {block}\n    if fallback-class\n      +create-fallback-class(selected, fallback-class)\n        {block}\n\npixel-ratio = density\n\nretina(orientation = null, fallback-class = null)\n  +density('retina', orientation, fallback-class)\n    {block}\n\nlandscape(density = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    if -is-string(density)\n      density = convert(density)\n    if density\n      +pixel-ratio(density, orientation: landscape, fallback-class)\n        {block}\n    else\n      @media only screen and (orientation: landscape)\n        {block}\n      if fallback-class\n        +create-fallback-class(selected, fallback-class)\n          {block}\n\nportrait(density = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    if -is-string(density)\n      density = convert(density)\n    if density\n      +pixel-ratio(density, orientation: portrait, fallback-class)\n        {block}\n    else\n      @media only screen and (orientation: portrait)\n        {block}\n      if fallback-class\n        +create-fallback-class(selected, fallback-class)\n          {block}\n"]}